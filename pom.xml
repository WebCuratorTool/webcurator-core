<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.webcurator</groupId>
	<artifactId>webcurator-core</artifactId>
	<version>3.0.0-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>Web Curator Tool Core</name>
	<description>Web Curator Tool core web application</description>

	<properties>
		<browse.double_escape>false</browse.double_escape>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>

	<build>
		<finalName>${project.artifactId}-${project.version}</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>1.0-alpha-1</version>
				<executions>
					<execution>
						<phase>initialize</phase>
						<goals>
							<goal>read-project-properties</goal>
						</goals>
						<configuration>
							<files>
								<file>${basedir}/build/local_${databaseType}_config.properties</file>
								<file>${basedir}/build/hib_${databaseType}.properties</file>
								<file>${basedir}/build/local_config.properties</file>
							</files>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.3</version>
				<configuration>
					<autoVersionSubmodules>true</autoVersionSubmodules>
					<!-- Install only as there is no maven repository -->
					<goals>install</goals>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<id>copy-jetty-env</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}</outputDirectory>
							<resources>
								<resource>
									<directory>build/jetty</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>jetty-filtered-resources</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/filtered</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/src/main/webapp-filter</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											properties-maven-plugin
										</artifactId>
										<versionRange>
											[1.0-alpha-1,)
										</versionRange>
										<goals>
											<goal>
												read-project-properties
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<profiles>
		<profile>
			<id>h2</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<databaseType>h2</databaseType>
				<hbm2ddl.auto>update</hbm2ddl.auto>
			</properties>
			<dependencies>
				<dependency>
					<groupId>com.h2database</groupId>
					<artifactId>h2</artifactId>
					<version>1.4.199</version>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>properties-maven-plugin</artifactId>
						<version>1.0-alpha-2</version>
						<executions>
							<execution>
								<goals>
									<goal>set-system-properties</goal>
								</goals>
								<configuration>
									<properties>
										<property>
											<name>hibernate.hbm2ddl.auto</name>
											<value>${hbm2ddl.auto}</value>
										</property>
										<!--
										<property>
											<name>hibernate.dialect</name>
											<value>org.hibernate.dialect.H2Dialect</value>
										</property>
										-->
									</properties>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>mysql</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<databaseType>mysql</databaseType>
			</properties>
			<dependencies>
				<dependency>
					<groupId>mysql</groupId>
					<artifactId>mysql-connector-java</artifactId>
					<version>5.1.6</version>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<!-- Note for running Oracle in Jetty you need to include the oracle driver
				in the war -->
			<id>oracle</id>
			<properties>
				<databaseType>oracle</databaseType>
			</properties>
			<dependencies>
				<dependency>
					<groupId>com.oracle</groupId>
					<artifactId>ojdbc14</artifactId>
					<version>11.2.0.3</version>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>postgres</id>
			<properties>
				<databaseType>postgres</databaseType>
			</properties>
			<dependencies>
				<dependency>
					<groupId>postgresql</groupId>
					<artifactId>postgresql</artifactId>
					<version>9.1-901.jdbc4</version>
				</dependency>
			</dependencies>
		</profile>
	</profiles>
	<repositories>
		<repository>
			<!-- Needed for com.sleepycat:je:3.374 -->
			<id>spring-plugins</id>
			<name>Spring Plugins</name>
			<url>http://repo.spring.io/plugins-release/</url>
		</repository>
	</repositories>
	<dependencies>
		<dependency>
			<groupId>org.acegisecurity</groupId>
			<artifactId>acegi-security</artifactId>
			<version>1.0.7</version>
			<scope>compile</scope>
			<exclusions>
				<!-- brings in spring-core, spring-remoting and spring-support 1.2.9, which have been superseded by
					spring-core 5.1.7.RELEASE, spring-context 5.1.7.RELEASE and spring-context-support 5.1.7.RELEASE -->
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-remoting</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-support</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.archive</groupId>
			<artifactId>heritrix</artifactId>
			<version>1.14.2-webcuratortool-2.0.1</version>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
				</exclusion>
				<exclusion>
					<!-- Pulls in 2.3, instead of javax.servlet:javax.servlet-api:3.1.0 -->
					<groupId>javax.servlet</groupId>
					<artifactId>servlet-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Includes org.apache.axis:axis-jaxrpc:jar:1.4, which supersedes javax.xml:jaxrpc-api:jar:1.1 -->
		<dependency>
			<groupId>axis</groupId>
			<artifactId>axis</artifactId>
			<version>1.4</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.3</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.1</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
			<!-- Use the version of commons-httpclient pulled in from org.archive.heritrix.
			     When the dependency with org.archive:heritrix is broken the non-modified version of commons-httpclient
			     can be used instead. Note that this dependency is required because the class BrowseHelper.java uses
			     UURIFactory.java, which uses UURI.java, which extends LaxURI.java, which is a custom heritrix-1.14.2-...
			     part of commons-httpclient-3.1.1-heritrix-1.14.2-webcuratortool-2.0.1 (and not commons-httpclient-3.1).
			-->
			<version>3.1.1-heritrix-1.14.2-webcuratortool-2.0.1</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.3.1</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.3</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.2</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.drools</groupId>
			<artifactId>drools-compiler</artifactId>
			<version>7.15.0.Final</version>
			<scope>compile</scope>
			<!-- Note that the drools-compiler brings in, as a dependency, com.thoughtworks.xstream:xstream:1.4.10,
				 which brings in xmlpull:xmlpull:1.1.3.1 which brings in xpp3:xpp3_min:1.1.4c.xmlpull and xpp3_min
				 have some classes in common, which Jetty may complain about. -->
		</dependency>
		<dependency>
			<groupId>org.drools</groupId>
			<artifactId>drools-core</artifactId>
			<version>7.15.0.Final</version>
			<scope>compile</scope>
		</dependency>
		<!-- I'm not sure where this dependency is appearing from. And it's a pom only.
			 TODO Determine if this is a valid dependecy, if not, remove it.
		<dependency>
			<groupId>org.drools</groupId>
			<artifactId>droolsjbpm-knowledge</artifactId>
			<version>5.4.0.Final</version>
			<type>pom</type>
			<scope>compile</scope>
		</dependency>
		-->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>5.4.2.Final</version>
			<scope>compile</scope>
		</dependency>
		<!-- Hibernate's second-level cache -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-ehcache</artifactId>
			<version>5.4.2.Final</version>
		</dependency>
		<!-- Hibernate's ConnectionProvider connection pool -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-c3p0</artifactId>
			<version>5.4.2.Final</version>
		</dependency>
		<dependency>
			<groupId>com.ibm</groupId>
			<artifactId>ibmjsse</artifactId>
			<version>1.0</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>14.0.1</version>
		</dependency>
		<dependency>
			<groupId>net.sf</groupId>
			<artifactId>jargs</artifactId>
			<version>1.0</version>
			<scope>compile</scope>
		</dependency>
		<!-- Override version brought in by org.archive:heritrix-->
		<dependency>
			<groupId>com.sleepycat</groupId>
			<artifactId>je</artifactId>
			<version>3.3.74</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>1.9.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>1.5.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
			<scope>compile</scope>
		</dependency>
		<!-- includes the classes in javax.mail:mailapi:1.4.2 -->
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4.7</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.6</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>oro</groupId>
			<artifactId>oro</artifactId>
			<version>2.0.8</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>2.3.1</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.5</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>smalltext-0.1.4</groupId>
			<artifactId>smalltext-0.1.4</artifactId>
			<version>0.1.4</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>5.1.7.RELEASE</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>5.1.7.RELEASE</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>5.1.7.RELEASE</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>5.1.7.RELEASE</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>5.1.7.RELEASE</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>5.1.7.RELEASE</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>5.1.7.RELEASE</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>5.1.7.RELEASE</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>5.1.7.RELEASE</version>
			<scope>compile</scope>
		</dependency>
		<!-- Not sure yet if this is required here or in webcurator-webapp
		-->
		<!--
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc-struts</artifactId>
			<version>5.1.7.RELEASE</version>
			<scope>compile</scope>
		</dependency>
		-->
		<dependency>
			<groupId>org.archive.wayback</groupId>
			<artifactId>wayback-core</artifactId>
			<version>1.2.0</version>
			<scope>compile</scope>
		</dependency>
	</dependencies>

</project>

